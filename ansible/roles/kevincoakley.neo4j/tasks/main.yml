---
- name: Include OS family specific variables
  include_vars: "{{ ansible_os_family }}.yml"

- name: Include OS specific tasks
  include_tasks: "{{ ansible_os_family }}.yml"

- name: Install Neo4j
  package:
    name: neo4j
    state: present
  when: neo4j_edition == 'community'

- name: Install Neo4j Enterprise
  package:
    name: neo4j-enterprise
    state: present
  when: neo4j_edition == 'enterprise'
  environment:
    NEO4J_ACCEPT_LICENSE_AGREEMENT: 'yes'

- name: Ensure graph DB folder exists and has the correct permissions
  file:
    path: "{{ neo4j_server_database_location }}"
    state: directory
    owner: neo4j
    group: "{{ neo4j_group }}"
    mode: 0755

# - name: Enable prometheus metrics
#   lineinfile:
#     dest: /etc/neo4j/neo4j.conf
#     regexp: '^metrics\.prometheus\.enabled=.*'
#     line: "metrics.prometheus.enabled={{ neo4j_prometheus_metrics_enabled }}"
#     state: present
#   notify: Restart Neo4j

# - name: Set prometheus metrics interface
#   lineinfile:
#     dest: /etc/neo4j/neo4j.conf
#     regexp: '^metrics\.prometheus\.endpoint=.*'
#     line: "metrics.prometheus.endpoint={{ neo4j_prometheus_metrics_endpoint }}"
#     state: present
#   notify: Restart Neo4j

- name: Neo4j | Update configuration (neo4j.conf)
  template:
    src: neo4j.conf.j2
    dest: "/etc/neo4j/neo4j.conf"
    owner: neo4j
    group: neo4j
    mode: 0644
  notify: Restart Neo4j

- name: Neo4j | Service install (neo4j)
  template:
    src: neo4j.j2
    dest: "/etc/init.d/neo4j"
    owner: root
    group: root
    mode: 0755
  notify: Restart Neo4j

- name: Ensure open files soft and hard limits are set
  copy:
    src: etc/security/limits.d/neo4j.conf
    dest: /etc/security/limits.d/neo4j.conf
    owner: root
    group: root
    mode: 0644

- name: Ensure pam_limits.so is enabled
  lineinfile:
    dest: /etc/pam.d/su
    regexp: '^(# )?session    required   pam_limits.so'
    line: "session    required   pam_limits.so"
    state: present

- name: Ensure the Neo4j service is enabled and started
  service:
    name: neo4j
    enabled: true
    state: started

# https://neo4j.com/docs/operations-manual/current/configuration/set-initial-password/
- name: Set Neo4j initial password
  command: "neo4j-admin set-initial-password '{{ neo4j_password }}'"
  args:
    creates: /var/lib/neo4j/data/dbms/auth.ini
  when: neo4j_password is defined and neo4j_password|string
